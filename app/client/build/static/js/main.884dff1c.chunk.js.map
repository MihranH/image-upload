{"version":3,"sources":["api/image.js","components/imageUploader/imageUploader.js","util.js","components/imageActions/crop.js","components/imageActions/resize.js","components/imageActions/blur.js","components/imageActions/actions.js","components/imageList/imageList.js","components/imageCMS/imageCMS.js","components/main/main.js","api/log.js","components/logs/logs.js","App.js","reportWebVitals.js","index.js"],"names":["data","a","axios","post","result","url","actions","get","id","delete","ImageUploader","props","handleImgUpload","file","type","message","error","FormData","append","loading","uploadImage","image","then","res","destroy","setState","imgUrl","success","copyURL","inputCopy","document","createElement","value","body","appendChild","select","execCommand","removeChild","state","this","className","beforeUpload","showUploadList","customRequest","icon","UploadOutlined","Boolean","shape","size","CopyOutlined","onClick","Component","validateData","obj","Object","keys","some","key","Crop","handleChange","e","target","name","saveParams","width","height","top","left","addAction","params","closeModal","visible","onCancel","onOk","okText","onChange","Resize","aspectRatio","Blur","percent","Actions","handleAction","getAction","style","Column","Table","confirmModal","Modal","confirm","ImageList","getData","getAllImages","deleteImage","imgId","title","cancelText","deleteImgById","dataSource","dataIndex","render","text","record","to","InfoCircleOutlined","ImageCMS","addImg","addImage","list","current","action","React","createRef","placeholder","ref","Main","imageId","Title","Typography","Logs","match","getImageLogs","review","reviewVisible","JSON","parse","closeReviewModal","footer","map","charAt","toUpperCase","substring","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.884dff1c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport async function uploadImage(data) {\r\n    try {\r\n        const result = await axios.post('/api/v1/images/upload-image', data);\r\n        return result.data;\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function addImage(url, actions) {\r\n    try {\r\n        await axios.post('/api/v1/images/add', { url, actions });\r\n        return true;\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function getAllImages() {\r\n    try {\r\n        const result = await axios.get('/api/v1/images');\r\n        return result.data;\r\n    } catch (error) {\r\n        return false;\r\n    }    \r\n}\r\n\r\nexport async function deleteImgById(id) {\r\n    try {\r\n        await axios.delete(`/api/v1/images/${id}`);\r\n        return true;\r\n    } catch (error) {\r\n        return false;\r\n    } \r\n}","import React, { Component } from 'react';\r\nimport { uploadImage } from '../../api/image'\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined, CopyOutlined } from '@ant-design/icons';\r\nimport './imageUploader.css';\r\n\r\nclass ImageUploader extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            imgUrl: '',\r\n        }\r\n    }\r\n\r\n    handleImgUpload = file => {\r\n        if (file.type !== 'image/jpeg' && file.type !== 'image/png') {\r\n            return message.error('You should upload either jpeg or png')\r\n        }\r\n        const data = new FormData();\r\n        data.append('image', file)\r\n        message.loading('Uploading...')\r\n        // the formdata should be sent but as we mock the image url then we send ordinary object\r\n        uploadImage({image: 'test'}).then(res => {\r\n            message.destroy();\r\n            if (res){\r\n                this.setState({imgUrl: res});\r\n                return message.success('Uploaded!');\r\n            } else {\r\n                return message.error('Failed to upload');\r\n            }\r\n        })\r\n    }\r\n\r\n    copyURL = url => {\r\n        const inputCopy = document.createElement('textarea')\r\n        inputCopy.value = url;\r\n        document.body.appendChild(inputCopy);\r\n        inputCopy.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(inputCopy);\r\n        message.destroy();\r\n        message.success('Image URL copied')\r\n    }\r\n\r\n    render(){\r\n        const { imgUrl } = this.state;\r\n        return (\r\n            <div className=\"upload-container\">\r\n               <Upload\r\n                beforeUpload={this.handleImgUpload}\r\n                showUploadList={false}\r\n                customRequest={() => {}}>\r\n                    <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n               </Upload>\r\n               {Boolean(imgUrl) && \r\n               <p>{imgUrl} \r\n                    <Button type='primary' shape='circle' size='small' icon={<CopyOutlined />} onClick={() => this.copyURL(imgUrl)}></Button>\r\n               </p>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageUploader;","export function validateData(obj) {\r\n   return !Object.keys(obj).some(key => obj[key] === '');\r\n}","import React, { Component } from 'react';\r\nimport './actions.css';\r\nimport { Input, message, Modal } from 'antd';\r\nimport { validateData } from '../../util';\r\n\r\nclass Crop extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            width: '',\r\n            height: '',\r\n            top: '',\r\n            left: '',\r\n        }\r\n    }\r\n\r\n  \r\n    handleChange = e => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    saveParams = () => {\r\n        const { width, height, top, left } = this.state;\r\n        if(!validateData(this.state)){\r\n            return message.error('Please provide all the fields');\r\n        }\r\n        this.props.addAction({\r\n            type: 'crop',  params: { width, height, top, left },\r\n        })\r\n        message.success('Noted')\r\n        this.props.closeModal()\r\n    }\r\n\r\n    render(){\r\n        const { width, height, top, left } = this.state;\r\n        return (\r\n           <Modal visible={true} onCancel={this.props.closeModal} onOk={this.saveParams} okText=\"Done\">\r\n               <div className='action-inputs'>\r\n                    <p>Width</p>\r\n                    <Input name='width' value={width} onChange={this.handleChange} type='number'></Input>\r\n               </div>\r\n               <div className='action-inputs'>\r\n                    <p>Height</p>\r\n                    <Input name='height' value={height} onChange={this.handleChange} type='number'></Input>\r\n               </div>\r\n               <div className='action-inputs'>\r\n                    <p>Top</p>\r\n                    <Input name='top' value={top} onChange={this.handleChange} type='number'></Input>\r\n                </div>\r\n                <div className='action-inputs'>\r\n                    <p>Left</p>\r\n                    <Input name='left' value={left} onChange={this.handleChange} type='number'></Input>\r\n                </div>\r\n           </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Crop;","import React, { Component } from 'react';\r\nimport './actions.css';\r\nimport { Input, message, Modal } from 'antd';\r\nimport { validateData } from '../../util';\r\n\r\nclass Resize extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            width: '',\r\n            height: '',\r\n            aspectRatio: '',\r\n        }\r\n    }\r\n\r\n  \r\n    handleChange = e => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    saveParams = () => {\r\n        const { width, height, aspectRatio } = this.state;\r\n        if(!validateData(this.state)){\r\n            return message.error('Please provide all the fields');\r\n        }\r\n        this.props.addAction({\r\n            type: 'resize',  params: { width, height, aspectRatio },\r\n        })\r\n        message.success('Noted')\r\n        this.props.closeModal()\r\n    }\r\n\r\n    render(){\r\n        const { width, height, aspectRatio } = this.state;\r\n        return (\r\n           <Modal visible={true} onCancel={this.props.closeModal} onOk={this.saveParams} okText=\"Done\">\r\n               <div className='action-inputs'>\r\n                    <p>Width</p>\r\n                    <Input name='width' value={width} onChange={this.handleChange} type='number'></Input>\r\n               </div>\r\n               <div className='action-inputs'>\r\n                    <p>Height</p>\r\n                    <Input name='height' value={height} onChange={this.handleChange} type='number'></Input>\r\n                </div>\r\n                <div className='action-inputs'>\r\n                    <p>Aspect Ratio</p>\r\n                    <Input name='aspectRatio' value={aspectRatio} onChange={this.handleChange}></Input>\r\n                </div>\r\n           </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resize;","import React, { Component } from 'react';\r\nimport './actions.css';\r\nimport { Input, message, Modal } from 'antd';\r\nimport { validateData } from '../../util';\r\n\r\nclass Blur extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            percent: '',\r\n        }\r\n    }\r\n\r\n  \r\n    handleChange = e => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    saveParams = () => {\r\n        const { percent } = this.state;\r\n        if(!validateData(this.state)){\r\n            return message.error('Please provide all the fields');\r\n        }\r\n        this.props.addAction({\r\n            type: 'blur',  params: { percent },\r\n        })\r\n        message.success('Noted')\r\n        this.props.closeModal()\r\n    }\r\n\r\n    render(){\r\n        const { percent } = this.state;\r\n        return (\r\n           <Modal visible={true} onCancel={this.props.closeModal} onOk={this.saveParams} okText=\"Done\">     \r\n                <div className='action-inputs'>\r\n                    <p>Percent</p>\r\n                    <Input name='percent' value={percent} onChange={this.handleChange} type='number'></Input>       \r\n                </div>      \r\n           </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Blur;","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\nimport Crop from './crop';\r\nimport Resize from './resize';\r\nimport Blur from './blur';\r\n\r\nclass Actions extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            type: '',\r\n        }\r\n    }\r\n\r\n  \r\n    handleAction = type => {\r\n        this.setState({type})\r\n    }\r\n\r\n    getAction = () => {\r\n        const { type } = this.state;\r\n        switch(type) {\r\n            case 'resize':\r\n                return <Resize closeModal={() => this.handleAction('')} addAction={this.props.addAction} />;\r\n            case 'crop':\r\n                return <Crop closeModal={() => this.handleAction('')} addAction={this.props.addAction} />;\r\n            case 'blur':\r\n                return <Blur closeModal={() => this.handleAction('')} addAction={this.props.addAction} />;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    render(){       \r\n        return (\r\n            <div style={{'margin': '15px'}}>\r\n              <Button style={{'margin': '15px'}} type='primary' onClick={() => this.handleAction('resize')}>Resize</Button>\r\n              <Button style={{'margin': '15px'}} type='primary' onClick={() => this.handleAction('crop')}>Crop</Button>\r\n              <Button style={{'margin': '15px'}} type='primary' onClick={() => this.handleAction('blur')}>Blur</Button>\r\n              {this.getAction()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Actions;","import React, { Component } from 'react';\r\nimport './imageList.css';\r\nimport { getAllImages, deleteImgById } from '../../api/image'\r\nimport { Table, Button, Modal, message } from 'antd';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Column } = Table;\r\nconst confirmModal = Modal.confirm;\r\n\r\nclass ImageList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        this.setState({loading: true})\r\n        getAllImages().then(res => {\r\n            this.setState({data: res, loading: false})\r\n        })\r\n    }\r\n\r\n    deleteImage = imgId => {\r\n        confirmModal({\r\n           title: 'Are you sure you want to delete this image',\r\n           okText: 'Yes',\r\n           cancelText: 'No',\r\n           onOk: () => {\r\n            message.loading('Deleting...')\r\n            deleteImgById(imgId).then(res => {\r\n                message.destroy();\r\n                if (res === true){\r\n                    this.getData();\r\n                    return message.success('Deleted!')\r\n                } else {\r\n                    return message.error('Failed to delete')\r\n                }\r\n            })\r\n           },\r\n           onCancel: () => {}\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { data, loading } = this.state;\r\n        return (\r\n            <div className=\"content\">\r\n                <Table dataSource={data} loading={loading}>\r\n                    <Column title=\"Image URL\" dataIndex=\"url\" key='url'></Column>\r\n                    <Column title=\"Log\" key='log'\r\n                     render={(text, record) => (\r\n                     <Link to={`log/${record.id}`}>\r\n                        <InfoCircleOutlined className='log-info-icon' />\r\n                     </Link>)}></Column>\r\n                    <Column title=\"Delete\" key='delete'\r\n                     render={(text, record) => (<Button type='danger' onClick={() => this.deleteImage(record.id)}>Delete</Button>)}>                         \r\n                    </Column>\r\n                </Table>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageList;","import React, { Component } from 'react';\r\nimport { addImage } from '../../api/image'\r\nimport { Input, Button, message } from 'antd';\r\nimport './imageCMS.css';\r\nimport Actions from '../imageActions/actions';\r\nimport ImageList from '../imageList/imageList';\r\n\r\nclass ImageCMS extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            imgUrl: '',\r\n            actions: [],\r\n            loading: false,\r\n        }\r\n        this.list = React.createRef();\r\n    }\r\n\r\n  \r\n    handleChange = e => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    addImg = () => {\r\n        const { imgUrl, actions } = this.state;\r\n        if (!imgUrl) {\r\n            return message.error('Image url should not be empty')\r\n        }\r\n        message.loading('Adding...')\r\n        this.setState({loading: true})\r\n        addImage(imgUrl, actions).then(res => {\r\n            message.destroy()\r\n            this.setState({loading: false, imgUrl: ''})\r\n            if (res === true) {\r\n                if (this.list && this.list.current) {\r\n                    this.list.current.getData();\r\n                }\r\n                return message.success('Added!')\r\n            } else {\r\n                return message.error('Failed to add')\r\n            }\r\n        })\r\n    }\r\n\r\n    addAction = action => {\r\n        const { actions } = this.state;\r\n        this.setState({ actions: [...actions, action] });\r\n    }\r\n\r\n    render(){\r\n        const { imgUrl, actions, loading } = this.state;\r\n        return (\r\n            <div>\r\n              <Input className='url-input' placeholder=\"Image URL\" name=\"imgUrl\" value={imgUrl} onChange={this.handleChange}></Input>\r\n              <Button type='primary' onClick={this.addImg} loading={loading}>Add</Button>\r\n              {Boolean(imgUrl) && <Actions addAction={this.addAction}/>}\r\n              <ImageList ref={this.list}/> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageCMS;","import React from 'react';\r\nimport ImageUploader from '../imageUploader/imageUploader';\r\nimport ImageCMS from '../imageCMS/imageCMS';\r\n\r\nfunction Main() {   \r\n    return (\r\n        <>\r\n            <ImageUploader />               \r\n            <ImageCMS />                           \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default Main;","import axios from 'axios';\r\n\r\nexport async function getImageLogs(imageId) {\r\n    try {\r\n        const result = await axios.get(`/api/v1/logs/${imageId}`);\r\n        return result.data;\r\n    } catch (error) {\r\n        return false;\r\n    }    \r\n}\r\n","import React, { Component } from 'react';\r\nimport { getImageLogs } from '../../api/log'\r\nimport { Table, Button, Modal, Typography } from 'antd';\r\nimport './logs.css'\r\n\r\nconst { Column } = Table;\r\nconst { Title } = Typography;\r\n\r\nclass Logs extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            reviewVisible: false,\r\n            params: {},\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        const { id } = this.props.match.params;\r\n        this.setState({loading: true})\r\n        getImageLogs(id).then(res => {\r\n            this.setState({data: res, loading: false})\r\n        })\r\n    }\r\n\r\n    review = params => {    \r\n        this.setState({reviewVisible: true, params: JSON.parse(params)})\r\n    }\r\n\r\n    closeReviewModal = () => {\r\n        this.setState({reviewVisible: false, params: {}})\r\n    }\r\n\r\n    render(){\r\n        const { data, loading, reviewVisible, params } = this.state;\r\n        return (\r\n            <>\r\n                <Title className='title-logs'>Logs</Title>\r\n                <div className=\"content-logs\">                    \r\n                    <Table dataSource={data} loading={loading}>\r\n                        <Column title=\"Type\" dataIndex=\"type\" key='type'></Column>\r\n                        <Column title=\"Params\" key='params'\r\n                        render={(text, record) => (<Button type='primary' onClick={() => this.review(record.params)}>Review</Button>)}></Column>                   \r\n                    </Table>                \r\n                </div>\r\n                <Modal visible={reviewVisible} footer={null} onCancel={this.closeReviewModal} width={300}>\r\n                    <div className='modal-content-logs'>\r\n                        {Object.keys(params).map(key => {\r\n                            return <p key={key}><strong>{key.charAt(0).toUpperCase() + key.substring(1)}</strong> : {params[key]}</p>\r\n                        })}\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logs;","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Main from './components/main/main';\nimport Logs from './components/logs/logs';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/' component={Main} exact/>\n        <Route path='/log/:id' component={Logs} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}